class Solution:
    def restoreMatrix(self, rowSum, colSum):
        # Initialize the matrix with zeros
        rows = len(rowSum)
        cols = len(colSum)
        matrix = [[0] * cols for _ in range(rows)]
        
        for i in range(rows):
            for j in range(cols):
                # Choose the minimum of the current row sum and column sum
                val = min(rowSum[i], colSum[j])
                matrix[i][j] = val
                # Subtract the chosen value from both row and column sums
                rowSum[i] -= val
                colSum[j] -= val
        
        return matrix

# Example usage:
solution = Solution()

rowSum1 = [3, 8]
colSum1 = [4, 7]
print(solution.restoreMatrix(rowSum1, colSum1))

rowSum2 = [5, 7, 10]
colSum2 = [8, 6, 8]
print(solution.restoreMatrix(rowSum2, colSum2))
