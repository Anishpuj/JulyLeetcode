𝗤𝗨𝗘𝗦𝗧𝗜𝗢𝗡:
Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must appear as many times as it shows in both arrays and you may return the result in any order.

 

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2,2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [4,9]
Explanation: [9,4] is also accepted.
 

Constraints:

1 <= nums1.length, nums2.length <= 1000
0 <= nums1[i], nums2[i] <= 1000




𝗔𝗡𝗦𝗪𝗘𝗥 :
from collections import Counter

class Solution:
    def intersect(self, nums1, nums2):
        # Count the occurrences of each element in nums1 and nums2
        count1 = Counter(nums1)
        count2 = Counter(nums2)
        
        # Find the intersection of both counters
        intersection = []
        for num in count1:
            if num in count2:
                # Add the minimum occurrences of the element in both arrays
                intersection.extend([num] * min(count1[num], count2[num]))
        
        return intersection

# Example 1
nums1 = [1, 2, 2, 1]
nums2 = [2, 2]
print(Solution().intersect(nums1, nums2))  # Output: [2, 2]

# Example 2
nums1 = [4, 9, 5]
nums2 = [9, 4, 9, 8, 4]
print(Solution().intersect(nums1, nums2))  # Output: [4, 9] or [9, 4]

